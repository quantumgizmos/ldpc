name: Build and Publish

on:
  push:
    branches:
      - release  # Trigger only on pushes to 'release' branch

jobs:
  build_sdist:
    name: Build Source Distribution (sdist)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build sdist
        run: python -m build --sdist

      - name: Check sdist metadata
        run: twine check dist/*

      - name: Upload sdist artifact
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  build_wheels:
    name: Build Binary Wheels
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        runner: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Run cibuildwheel
        uses: pypa/cibuildwheel@v3.1.1
        env:
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          CIBW_SKIP: pp*  # Skip PyPy unless needed

      - name: Upload wheel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.runner }}
          path: ./wheelhouse/*.whl


  # -------- Job: Upload to PyPI --------
  # This job downloads the previously uploaded sdist and wheels artifacts,
  # then uses the pypa/gh-action-pypi-publish action to upload all files in the "dist" folder to PyPI.
  upload_pypi:
    needs: [build_wheels, build_sdist]  # Wait for both build jobs to complete.
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository (useful if configuration files are needed).
      - name: Checkout out repo and submodules
        uses: actions/checkout@v4
        with:
          submodules: true

      # Download the sdist artifact.
      # "name" in the download action refers to the artifact identifier to fetch (here, "sdist").
      # "path" specifies where the downloaded file(s) should be placed on the runner.
      - name: Download SDist
        uses: actions/download-artifact@v4
        with:
          name: sdist   # Download the artifact previously uploaded as "sdist".
          path: dist    # Place the downloaded files into the "dist" directory.

      # Download all wheels artifacts.
      # "pattern" specifies a pattern to match artifact names; here it matches any artifact starting with "wheels-".
      # "path" again specifies the destination directory.
      # "merge-multiple: true" indicates that if multiple matching artifacts are found, their contents are merged into one folder.
      - name: Download Wheels
        uses: actions/download-artifact@v4
        with:
          pattern: wheels-*  # Match all artifacts whose names begin with "wheels-".
          path: dist         # Place all downloaded wheel files into the "dist" directory.
          merge-multiple: true

      # Publish to PyPI.
      # The pypa/gh-action-pypi-publish@release/v1 action uploads all files present in the "dist" folder to PyPI.
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_PASSWORD }}  # Supply the secure PyPI API token.
          skip-existing: true  # Skip files already present on PyPI.
          verbose: true        # Enable verbose output during the upload.