name: Build and Release

on:
  push:
  
jobs:
  build_sdist:
    name: Build Source Distribution
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0  # Get all history and tags
          lfs: true      # Get LFS files if used
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Build SDist
        run: |
          python -m pip install build
          python -m build --sdist
          
      - name: Check metadata
        run: |
          python -m pip install twine
          twine check dist/*
          
      - name: Upload SDist
        uses: actions/upload-artifact@v3
        with:
          name: sdist
          path: dist/*.tar.gz

  build_wheels:
    name: ${{ matrix.os }} ${{ matrix.platform }} ${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python: ['cp39', 'cp310', 'cp311', 'cp312', 'cp313']
        platform: [x86_64, arm64]  # Added explicit platform matrix
        exclude:
          # Remove arm64 builds for non-macOS
          - os: ubuntu-latest
            platform: arm64
          - os: windows-latest
            platform: arm64
          - os: windows-latest
            platform: x86_64
            python: ['cp13'] # Windows 3.13 not yet supported by PyMatching.
        include:
          - os: ubuntu-latest
            platform: x86_64
            cibw_platform: manylinux_x86_64
          - os: windows-latest
            platform: x86_64
            cibw_platform: win_amd64
          - os: macos-latest
            platform: x86_64
            cibw_platform: macosx_x86_64
          - os: macos-latest
            platform: arm64
            cibw_platform: macosx_arm64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0  # Get all history and tags
          lfs: true      # Get LFS files if used

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.22.0
        env:
          CIBW_BUILD: ${{ matrix.python }}-${{ matrix.cibw_platform }}
          CIBW_TEST_REQUIRES: pytest numpy
          CIBW_TEST_COMMAND: "cd {project} && pytest {project}"
          CIBW_TEST_COMMAND_WINDOWS: "cd /d {project} && pytest {project}"
          CIBW_ARCHS_MACOS: ${{ matrix.platform }}

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.python }}-${{ matrix.platform }}
          path: ./wheelhouse/*.whl

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/release'
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: dist

      - name: Move files to dist root
        run: |
          find dist -type f -exec mv {} dist/ \;
          
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_PASSWORD }}
          skip_existing: true
          verbose: true
